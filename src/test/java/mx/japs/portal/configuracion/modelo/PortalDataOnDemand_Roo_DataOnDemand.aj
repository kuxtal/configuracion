// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package mx.japs.portal.configuracion.modelo;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import mx.japs.portal.configuracion.modelo.Portal;
import mx.japs.portal.configuracion.modelo.PortalDataOnDemand;
import mx.japs.portal.configuracion.repositorio.PortalRepository;
import mx.japs.portal.configuracion.servicio.PortalService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect PortalDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PortalDataOnDemand: @Component;
    
    private Random PortalDataOnDemand.rnd = new SecureRandom();
    
    private List<Portal> PortalDataOnDemand.data;
    
    @Autowired
    PortalService PortalDataOnDemand.portalService;
    
    @Autowired
    PortalRepository PortalDataOnDemand.portalRepository;
    
    public Portal PortalDataOnDemand.getNewTransientPortal(int index) {
        Portal obj = new Portal();
        setApi_url(obj, index);
        setDescripcion(obj, index);
        setNombre(obj, index);
        setUrl(obj, index);
        return obj;
    }
    
    public void PortalDataOnDemand.setApi_url(Portal obj, int index) {
        String api_url = "api_url_" + index;
        obj.setApi_url(api_url);
    }
    
    public void PortalDataOnDemand.setDescripcion(Portal obj, int index) {
        String descripcion = "descripcion_" + index;
        obj.setDescripcion(descripcion);
    }
    
    public void PortalDataOnDemand.setNombre(Portal obj, int index) {
        String nombre = "nombre_" + index;
        obj.setNombre(nombre);
    }
    
    public void PortalDataOnDemand.setUrl(Portal obj, int index) {
        String url = "url_" + index;
        obj.setUrl(url);
    }
    
    public Portal PortalDataOnDemand.getSpecificPortal(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Portal obj = data.get(index);
        Long id = obj.getId();
        return portalService.findPortal(id);
    }
    
    public Portal PortalDataOnDemand.getRandomPortal() {
        init();
        Portal obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return portalService.findPortal(id);
    }
    
    public boolean PortalDataOnDemand.modifyPortal(Portal obj) {
        return false;
    }
    
    public void PortalDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = portalService.findPortalEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Portal' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Portal>();
        for (int i = 0; i < 10; i++) {
            Portal obj = getNewTransientPortal(i);
            try {
                portalService.savePortal(obj);
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            portalRepository.flush();
            data.add(obj);
        }
    }
    
}
